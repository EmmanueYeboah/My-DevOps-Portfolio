name: Deploy to AWS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-2
  PROJECT_NAME: devops-portfolio

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install backend dependencies
        run: |
          cd devops-portfolio/backend
          npm install
      
      - name: Run backend tests
        run: |
          cd devops-portfolio/backend
          npm test --if-present

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0
          terraform_wrapper: false

      - name: Terraform Init
        run: |
          cd devops-portfolio/terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd devops-portfolio/terraform
          terraform plan

      - name: Terraform Apply
        run: |
          cd devops-portfolio/terraform
          terraform apply -auto-approve

      - name: Get ECR Repository URL
        id: ecr-url
        run: |
          cd devops-portfolio/terraform
          echo "ecr_url=$(terraform output -raw ecr_repository_url)" >> $GITHUB_OUTPUT

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push backend image
        env:
          ECR_REPOSITORY_URL: ${{ steps.ecr-url.outputs.ecr_url }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd devops-portfolio/backend
          docker build -t $ECR_REPOSITORY_URL:$IMAGE_TAG .
          docker build -t $ECR_REPOSITORY_URL:latest .
          docker push $ECR_REPOSITORY_URL:$IMAGE_TAG
          docker push $ECR_REPOSITORY_URL:latest

      - name: Setup Node.js for frontend
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build and deploy frontend
        run: |
          cd devops-portfolio/terraform
          API_URL=$(terraform output -raw backend_api_url)
          cd ../frontend
          REACT_APP_API_URL=$API_URL npm install
          REACT_APP_API_URL=$API_URL npm run build
          cd ../terraform
          BUCKET_NAME=$(terraform output -raw s3_frontend_bucket_name)
          aws s3 sync ../frontend/build/ s3://$BUCKET_NAME --delete

      - name: Update ECS service
        run: |
          cd devops-portfolio/terraform
          CLUSTER_NAME=$(terraform output -raw ecs_cluster_name)
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service ${{ env.PROJECT_NAME }}-backend \
            --force-new-deployment